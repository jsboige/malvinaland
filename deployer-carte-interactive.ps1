# Script de d√©ploiement de la carte interactive am√©lior√©e de Malvinaland
# Ce script copie les fichiers modifi√©s et teste la fonctionnalit√©

Write-Host "=== D√âPLOIEMENT DE LA CARTE INTERACTIVE MALVINALAND ===" -ForegroundColor Cyan
Write-Host ""

# Fonction pour afficher les messages color√©s
function Write-ColorMessage {
    param(
        [string]$Message,
        [string]$Color = "White"
    )
    Write-Host $Message -ForegroundColor $Color
}

# Fonction pour v√©rifier l'existence d'un fichier
function Test-FileExists {
    param([string]$Path)
    if (Test-Path $Path) {
        Write-ColorMessage "‚úÖ $Path existe" -Color Green
        return $true
    } else {
        Write-ColorMessage "‚ùå $Path n'existe pas" -Color Red
        return $false
    }
}

Write-ColorMessage "1. V√©rification des fichiers sources..." -Color Yellow

# V√©rifier les fichiers sources
$sourceFiles = @(
    "src/content/carte.md",
    "src/assets/js/carte-interactive.js",
    "site-web/content/carte/index.html",
    "site-web/assets/js/carte-interactive.js"
)

$allFilesExist = $true
foreach ($file in $sourceFiles) {
    if (-not (Test-FileExists $file)) {
        $allFilesExist = $false
    }
}

if (-not $allFilesExist) {
    Write-ColorMessage "‚ùå Certains fichiers sources sont manquants. Arr√™t du d√©ploiement." -Color Red
    exit 1
}

Write-ColorMessage "`n2. Copie des fichiers vers le r√©pertoire de d√©ploiement..." -Color Yellow

# Cr√©er les r√©pertoires de destination si n√©cessaire
$destDirs = @(
    "site/content/carte",
    "site/assets/js"
)

foreach ($dir in $destDirs) {
    if (-not (Test-Path $dir)) {
        New-Item -ItemType Directory -Path $dir -Force | Out-Null
        Write-ColorMessage "üìÅ R√©pertoire cr√©√© : $dir" -Color Green
    }
}

# Copier les fichiers
try {
    # Copier le fichier HTML de la carte
    Copy-Item "site-web/content/carte/index.html" "site/content/carte/index.html" -Force
    Write-ColorMessage "‚úÖ Carte HTML copi√©e" -Color Green
    
    # Copier le script JavaScript
    Copy-Item "site-web/assets/js/carte-interactive.js" "site/assets/js/carte-interactive.js" -Force
    Write-ColorMessage "‚úÖ Script JavaScript copi√©" -Color Green
    
    # V√©rifier que l'image de la carte existe
    if (Test-Path "site/assets/images/carte-malvinaland.png") {
        Write-ColorMessage "‚úÖ Image de la carte pr√©sente" -Color Green
    } else {
        Write-ColorMessage "‚ö†Ô∏è Image de la carte manquante - copie depuis src/" -Color Yellow
        if (Test-Path "src/assets/images/carte-malvinaland.png") {
            Copy-Item "src/assets/images/carte-malvinaland.png" "site/assets/images/carte-malvinaland.png" -Force
            Write-ColorMessage "‚úÖ Image de la carte copi√©e" -Color Green
        } else {
            Write-ColorMessage "‚ùå Image de la carte introuvable dans src/" -Color Red
        }
    }
    
} catch {
    Write-ColorMessage "‚ùå Erreur lors de la copie : $($_.Exception.Message)" -Color Red
    exit 1
}

Write-ColorMessage "`n3. V√©rification des coordonn√©es de la carte..." -Color Yellow

# Lire le contenu HTML et v√©rifier les coordonn√©es
$htmlContent = Get-Content "site/content/carte/index.html" -Raw
$areaMatches = [regex]::Matches($htmlContent, '<area[^>]+>')

Write-ColorMessage "üìç Zones cliquables d√©tect√©es : $($areaMatches.Count)" -Color Cyan

foreach ($match in $areaMatches) {
    $area = $match.Value
    if ($area -match 'title="([^"]+)"') {
        $title = $matches[1]
        if ($area -match 'coords="([^"]+)"') {
            $coords = $matches[1]
            Write-ColorMessage "  ‚Ä¢ $title : $coords" -Color White
        }
    }
}

Write-ColorMessage "`n4. Test de l'accessibilit√© du site..." -Color Yellow

# Tester l'acc√®s au site
try {
    $response = Invoke-WebRequest -Uri "https://malvinaland.myia.io/carte" -Method Head -TimeoutSec 10
    if ($response.StatusCode -eq 200) {
        Write-ColorMessage "‚úÖ Site accessible (Status: $($response.StatusCode))" -Color Green
    } else {
        Write-ColorMessage "‚ö†Ô∏è Site accessible mais status inhabituel: $($response.StatusCode)" -Color Yellow
    }
} catch {
    Write-ColorMessage "‚ùå Site non accessible : $($_.Exception.Message)" -Color Red
}

Write-ColorMessage "`n5. R√©sum√© des am√©liorations apport√©es..." -Color Yellow

Write-ColorMessage "üéØ AM√âLIORATIONS DE LA CARTE INTERACTIVE :" -Color Cyan
Write-ColorMessage "  ‚Ä¢ Coordonn√©es pr√©cises bas√©es sur l'analyse visuelle" -Color White
Write-ColorMessage "  ‚Ä¢ Zones rectangulaires et circulaires adapt√©es aux formes r√©elles" -Color White
Write-ColorMessage "  ‚Ä¢ Effets visuels de survol avec surbrillance" -Color White
Write-ColorMessage "  ‚Ä¢ Tooltips informatifs pour chaque monde" -Color White
Write-ColorMessage "  ‚Ä¢ Animation de clic avec feedback visuel" -Color White
Write-ColorMessage "  ‚Ä¢ Design responsive pour mobile" -Color White
Write-ColorMessage "  ‚Ä¢ L√©gende am√©lior√©e avec style moderne" -Color White
Write-ColorMessage "  ‚Ä¢ Indicateur visuel pour guider les utilisateurs" -Color White

Write-ColorMessage "`n6. Instructions de test..." -Color Yellow

Write-ColorMessage "üß™ POUR TESTER LA CARTE INTERACTIVE :" -Color Cyan
Write-ColorMessage "  1. Ouvrez https://malvinaland.myia.io/carte dans votre navigateur" -Color White
Write-ColorMessage "  2. Survolez les diff√©rents mondes color√©s sur la carte" -Color White
Write-ColorMessage "  3. V√©rifiez que les tooltips s'affichent" -Color White
Write-ColorMessage "  4. Cliquez sur un monde pour naviguer vers sa page" -Color White
Write-ColorMessage "  5. Testez sur mobile pour v√©rifier la responsivit√©" -Color White

Write-ColorMessage "`n=== D√âPLOIEMENT TERMIN√â AVEC SUCC√àS ===" -Color Green
Write-ColorMessage "La carte interactive de Malvinaland a √©t√© am√©lior√©e et d√©ploy√©e !" -Color Green
Write-ColorMessage "URL de test : https://malvinaland.myia.io/carte" -Color Cyan

# Optionnel : ouvrir le navigateur pour tester
$openBrowser = Read-Host "`nVoulez-vous ouvrir le navigateur pour tester ? (o/n)"
if ($openBrowser -eq "o" -or $openBrowser -eq "O") {
    Start-Process "https://malvinaland.myia.io/carte"
    Write-ColorMessage "üåê Navigateur ouvert sur la carte interactive" -Color Green
}

Write-Host ""
Write-ColorMessage "Script termin√©. Bonne exploration des mondes de Malvinaland ! üó∫Ô∏è‚ú®" -Color Magenta